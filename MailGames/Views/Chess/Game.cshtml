@using Chess
@using MailGames.Models
@using GameBase
@model ChessGameViewModel
@{
    Layout = "~/Views/Shared/_Game.cshtml";
}

@functions
{

    static string FormatChessPosition(Position position)
    {
        return (char)((int)'A' + position.X) + (8 - position.Y).ToString();
    }

}

@Html.Partial("_Board", Model.Board)

@section moves
{
    <h2>Captured pieces</h2>
    @if (Model.CapturedPieces.Any())
    {
        foreach (var capturedPiece in Model.CapturedPieces)
        {
            <b class="
                            piece 
                            piece-@capturedPiece.PieceType.ToString().ToLower() 
                            piece-color-@capturedPiece.GamePlayer.ToString().ToLower()
                            "></b>
        }
    }
    else
    {
        <i>No pieces has been captured yet...</i>
    }
    
    <h2>Moves</h2>
    <table class="table">
        <thead><tr><th>Piece</th><th>From</th><th>To</th></tr></thead>
        @foreach (var move in Model.Moves)
        {
            <tr>
                <td>
                    <b class="
                            piece 
                            piece-@move.Piece.PieceType.ToString().ToLower() 
                            piece-color-@move.Piece.GamePlayer.ToString().ToLower()
                            "></b>

                </td>
                <td>@FormatChessPosition(move.From)</td>
                <td>@FormatChessPosition(move.To)</td>
            </tr>
        }
    </table>
}

@section scripts
{
    <script src="/Scripts/chess.js"></script>
}
